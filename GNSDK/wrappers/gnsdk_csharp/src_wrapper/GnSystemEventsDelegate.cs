/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace GracenoteSDK {

using System;
using System.Runtime.InteropServices;

public class GnSystemEventsDelegate : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal GnSystemEventsDelegate(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(GnSystemEventsDelegate obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~GnSystemEventsDelegate() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          gnsdk_csharp_marshalPINVOKE.delete_GnSystemEventsDelegate(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public virtual void LocaleUpdateNeeded(GnLocale locale) {
    gnsdk_csharp_marshalPINVOKE.GnSystemEventsDelegate_LocaleUpdateNeeded(swigCPtr, GnLocale.getCPtr(locale));
    if (gnsdk_csharp_marshalPINVOKE.SWIGPendingException.Pending) throw gnsdk_csharp_marshalPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void ListUpdateNeeded(GnList list) {
    gnsdk_csharp_marshalPINVOKE.GnSystemEventsDelegate_ListUpdateNeeded(swigCPtr, GnList.getCPtr(list));
    if (gnsdk_csharp_marshalPINVOKE.SWIGPendingException.Pending) throw gnsdk_csharp_marshalPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SystemMemoryWarning(uint curMemSize, uint memoryWarnSize) {
    gnsdk_csharp_marshalPINVOKE.GnSystemEventsDelegate_SystemMemoryWarning(swigCPtr, curMemSize, memoryWarnSize);
  }

  public GnSystemEventsDelegate() : this(gnsdk_csharp_marshalPINVOKE.new_GnSystemEventsDelegate(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("LocaleUpdateNeeded", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateGnSystemEventsDelegate_0(SwigDirectorLocaleUpdateNeeded);
    if (SwigDerivedClassHasMethod("ListUpdateNeeded", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateGnSystemEventsDelegate_1(SwigDirectorListUpdateNeeded);
    if (SwigDerivedClassHasMethod("SystemMemoryWarning", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateGnSystemEventsDelegate_2(SwigDirectorSystemMemoryWarning);
    gnsdk_csharp_marshalPINVOKE.GnSystemEventsDelegate_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2);
  }

  private bool SwigDerivedClassHasMethod(string methodName, Type[] methodTypes) {
    System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(GnSystemEventsDelegate));
    return hasDerivedMethod;
  }

  private void SwigDirectorLocaleUpdateNeeded(IntPtr locale) {
    LocaleUpdateNeeded(new GnLocale(locale, false));
  }

  private void SwigDirectorListUpdateNeeded(IntPtr list) {
    ListUpdateNeeded(new GnList(list, false));
  }

  private void SwigDirectorSystemMemoryWarning(uint curMemSize, uint memoryWarnSize) {
    SystemMemoryWarning(curMemSize, memoryWarnSize);
  }

  public delegate void SwigDelegateGnSystemEventsDelegate_0(IntPtr locale);
  public delegate void SwigDelegateGnSystemEventsDelegate_1(IntPtr list);
  public delegate void SwigDelegateGnSystemEventsDelegate_2(uint curMemSize, uint memoryWarnSize);

  private SwigDelegateGnSystemEventsDelegate_0 swigDelegate0;
  private SwigDelegateGnSystemEventsDelegate_1 swigDelegate1;
  private SwigDelegateGnSystemEventsDelegate_2 swigDelegate2;

  private static Type[] swigMethodTypes0 = new Type[] { typeof(GnLocale) };
  private static Type[] swigMethodTypes1 = new Type[] { typeof(GnList) };
  private static Type[] swigMethodTypes2 = new Type[] { typeof(uint), typeof(uint) };
}

}

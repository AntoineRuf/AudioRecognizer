/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.gracenote.gnsdk;

public class GnMoodgridPresentation extends GnObject {
  private long swigCPtr;

  protected GnMoodgridPresentation(long cPtr, boolean cMemoryOwn) {
    super(gnsdk_javaJNI.GnMoodgridPresentation_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GnMoodgridPresentation obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gnsdk_javaJNI.delete_GnMoodgridPresentation(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public GnMoodgridPresentationDataIterable moods() throws com.gracenote.gnsdk.GnException {
    return new GnMoodgridPresentationDataIterable(gnsdk_javaJNI.GnMoodgridPresentation_moods(swigCPtr, this), true);
  }

  public GnMoodgridPresentationType layoutType() throws com.gracenote.gnsdk.GnException {
    return GnMoodgridPresentationType.swigToEnum(gnsdk_javaJNI.GnMoodgridPresentation_layoutType(swigCPtr, this));
  }

  public GnMoodgridCoordinateType coordinateType() {
    return GnMoodgridCoordinateType.swigToEnum(gnsdk_javaJNI.GnMoodgridPresentation_coordinateType(swigCPtr, this));
  }

  public void addFilter(String uniqueIdentifier, GnMoodgridFilterListType elistType, String strValueId, GnMoodgridFilterConditionType eConditionType) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnMoodgridPresentation_addFilter(swigCPtr, this, uniqueIdentifier, elistType.swigValue(), strValueId, eConditionType.swigValue());
  }

  public void removeFilter(String uniqueIdentifier) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnMoodgridPresentation_removeFilter(swigCPtr, this, uniqueIdentifier);
  }

  public void removeAllFilters() throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnMoodgridPresentation_removeAllFilters(swigCPtr, this);
  }

  public String moodName(GnMoodgridDataPoint position) throws com.gracenote.gnsdk.GnException {
    return gnsdk_javaJNI.GnMoodgridPresentation_moodName(swigCPtr, this, GnMoodgridDataPoint.getCPtr(position), position);
  }

  public String moodId(GnMoodgridDataPoint position) throws com.gracenote.gnsdk.GnException {
    return gnsdk_javaJNI.GnMoodgridPresentation_moodId(swigCPtr, this, GnMoodgridDataPoint.getCPtr(position), position);
  }

  public GnMoodgridResult findRecommendations(GnMoodgridProvider provider, GnMoodgridDataPoint position) throws com.gracenote.gnsdk.GnException {
    return new GnMoodgridResult(gnsdk_javaJNI.GnMoodgridPresentation_findRecommendations(swigCPtr, this, GnMoodgridProvider.getCPtr(provider), provider, GnMoodgridDataPoint.getCPtr(position), position), true);
  }

  public long findRecommendationsEstimate(GnMoodgridProvider provider, GnMoodgridDataPoint position) throws com.gracenote.gnsdk.GnException {
    return gnsdk_javaJNI.GnMoodgridPresentation_findRecommendationsEstimate(swigCPtr, this, GnMoodgridProvider.getCPtr(provider), provider, GnMoodgridDataPoint.getCPtr(position), position);
  }

}

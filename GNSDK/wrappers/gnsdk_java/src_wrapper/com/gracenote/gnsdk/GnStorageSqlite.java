/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.gracenote.gnsdk;

public class GnStorageSqlite {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected GnStorageSqlite(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GnStorageSqlite obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gnsdk_javaJNI.delete_GnStorageSqlite(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static void useExternalLibrary(String sqlite3_filepath) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnStorageSqlite_useExternalLibrary(sqlite3_filepath);
  }

  public static GnStorageSqlite enable() throws com.gracenote.gnsdk.GnException {
    return new GnStorageSqlite(gnsdk_javaJNI.GnStorageSqlite_enable(), false);
  }

  public static String version() {
    return gnsdk_javaJNI.GnStorageSqlite_version();
  }

  public static String buildDate() {
    return gnsdk_javaJNI.GnStorageSqlite_buildDate();
  }

  public static String sqliteVersion() {
    return gnsdk_javaJNI.GnStorageSqlite_sqliteVersion();
  }

  public void storageLocation(String folderPath) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnStorageSqlite_storageLocation__SWIG_0(swigCPtr, this, folderPath);
  }

  public String storageLocation() throws com.gracenote.gnsdk.GnException {
    return gnsdk_javaJNI.GnStorageSqlite_storageLocation__SWIG_1(swigCPtr, this);
  }

  public String temporaryStorageLocation() throws com.gracenote.gnsdk.GnException {
    return gnsdk_javaJNI.GnStorageSqlite_temporaryStorageLocation__SWIG_0(swigCPtr, this);
  }

  public void temporaryStorageLocation(String folderPath) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnStorageSqlite_temporaryStorageLocation__SWIG_1(swigCPtr, this, folderPath);
  }

  public void maximumCacheFileSize(long maxCacheSize) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnStorageSqlite_maximumCacheFileSize__SWIG_0(swigCPtr, this, maxCacheSize);
  }

  public long maximumCacheFileSize() throws com.gracenote.gnsdk.GnException {
    return gnsdk_javaJNI.GnStorageSqlite_maximumCacheFileSize__SWIG_1(swigCPtr, this);
  }

  public void maximumCacheMemory(long maxMemSize) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnStorageSqlite_maximumCacheMemory__SWIG_0(swigCPtr, this, maxMemSize);
  }

  public long maximumCacheMemory() throws com.gracenote.gnsdk.GnException {
    return gnsdk_javaJNI.GnStorageSqlite_maximumCacheMemory__SWIG_1(swigCPtr, this);
  }

  public void synchronousMode(String mode) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnStorageSqlite_synchronousMode__SWIG_0(swigCPtr, this, mode);
  }

  public String synchronousMode() throws com.gracenote.gnsdk.GnException {
    return gnsdk_javaJNI.GnStorageSqlite_synchronousMode__SWIG_1(swigCPtr, this);
  }

  public void journalMode(String mode) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnStorageSqlite_journalMode__SWIG_0(swigCPtr, this, mode);
  }

  public String journalMode() throws com.gracenote.gnsdk.GnException {
    return gnsdk_javaJNI.GnStorageSqlite_journalMode__SWIG_1(swigCPtr, this);
  }

}

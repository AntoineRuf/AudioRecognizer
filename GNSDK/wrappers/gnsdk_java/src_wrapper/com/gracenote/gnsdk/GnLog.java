/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.gracenote.gnsdk;

public class GnLog {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected GnLog(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GnLog obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gnsdk_javaJNI.delete_GnLog(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

	private IGnLogEvents pLoggingDelegate;
	private IGnLogEventsProxyU logProxyDelegate;

  public GnLog(String logFilePath, IGnLogEvents pLoggingDelegate) {
	this(0, true);
	
	if ( pLoggingDelegate != null )
	{
		logProxyDelegate = new IGnLogEventsProxyU(pLoggingDelegate);
	}
	this.pLoggingDelegate=pLoggingDelegate;		// <REFERENCE_NAME_CHECK><TYPE>IGnLogEvents</TYPE><NAME>pLoggingDelegate</NAME></REFERENCE_NAME_CHECK> leave for scripted verification of names
	
	swigCPtr = gnsdk_javaJNI.new_GnLog__SWIG_0(logFilePath, (logProxyDelegate==null)?0:IGnLogEventsProxyL.getCPtr(logProxyDelegate), logProxyDelegate);	
}

  public GnLog(String logFilePath) {
	this(0, true);
	
	if ( pLoggingDelegate != null )
	{
		logProxyDelegate = new IGnLogEventsProxyU(pLoggingDelegate);
	}
	this.pLoggingDelegate=pLoggingDelegate;		// <REFERENCE_NAME_CHECK><TYPE>IGnLogEvents</TYPE><NAME>pLoggingDelegate</NAME></REFERENCE_NAME_CHECK> leave for scripted verification of names
	
	swigCPtr = gnsdk_javaJNI.new_GnLog__SWIG_1(logFilePath);	
}

  public GnLog(String logFilePath, GnLogFilters filters, GnLogColumns columns, GnLogOptions options, IGnLogEvents pLoggingDelegate) {
	this(0, true);
	
	if ( pLoggingDelegate != null )
	{
		logProxyDelegate = new IGnLogEventsProxyU(pLoggingDelegate);
	}
	this.pLoggingDelegate=pLoggingDelegate;		// <REFERENCE_NAME_CHECK><TYPE>IGnLogEvents</TYPE><NAME>pLoggingDelegate</NAME></REFERENCE_NAME_CHECK> leave for scripted verification of names
	
	swigCPtr = gnsdk_javaJNI.new_GnLog__SWIG_2(logFilePath, GnLogFilters.getCPtr(filters), filters, GnLogColumns.getCPtr(columns), columns, GnLogOptions.getCPtr(options), options, (logProxyDelegate==null)?0:IGnLogEventsProxyL.getCPtr(logProxyDelegate), logProxyDelegate);	
}

  public GnLog(String logFilePath, GnLogFilters filters, GnLogColumns columns, GnLogOptions options) {
	this(0, true);
	
	if ( pLoggingDelegate != null )
	{
		logProxyDelegate = new IGnLogEventsProxyU(pLoggingDelegate);
	}
	this.pLoggingDelegate=pLoggingDelegate;		// <REFERENCE_NAME_CHECK><TYPE>IGnLogEvents</TYPE><NAME>pLoggingDelegate</NAME></REFERENCE_NAME_CHECK> leave for scripted verification of names
	
	swigCPtr = gnsdk_javaJNI.new_GnLog__SWIG_3(logFilePath, GnLogFilters.getCPtr(filters), filters, GnLogColumns.getCPtr(columns), columns, GnLogOptions.getCPtr(options), options);	
}

  public void options(GnLogOptions options) {
    gnsdk_javaJNI.GnLog_options(swigCPtr, this, GnLogOptions.getCPtr(options), options);
  }

  public void filters(GnLogFilters filters) {
    gnsdk_javaJNI.GnLog_filters(swigCPtr, this, GnLogFilters.getCPtr(filters), filters);
  }

  public void columns(GnLogColumns columns) {
    gnsdk_javaJNI.GnLog_columns(swigCPtr, this, GnLogColumns.getCPtr(columns), columns);
  }

  public GnLog enable(GnLogPackageType arg0) throws com.gracenote.gnsdk.GnException {
    return new GnLog(gnsdk_javaJNI.GnLog_enable__SWIG_0(swigCPtr, this, arg0.swigValue()), false);
  }

  public GnLog enable(int customPackageId) throws com.gracenote.gnsdk.GnException {
    return new GnLog(gnsdk_javaJNI.GnLog_enable__SWIG_1(swigCPtr, this, customPackageId), false);
  }

  public GnLog disable(GnLogPackageType arg0) throws com.gracenote.gnsdk.GnException {
    return new GnLog(gnsdk_javaJNI.GnLog_disable__SWIG_0(swigCPtr, this, arg0.swigValue()), false);
  }

  public GnLog disable(int customPackageId) throws com.gracenote.gnsdk.GnException {
    return new GnLog(gnsdk_javaJNI.GnLog_disable__SWIG_1(swigCPtr, this, customPackageId), false);
  }

  public GnLog register(int customPackageId, String customPackageName) throws com.gracenote.gnsdk.GnException {
    return new GnLog(gnsdk_javaJNI.GnLog_register(swigCPtr, this, customPackageId, customPackageName), false);
  }

  public static void write(int line, String fileName, int customPackageId, GnLogMessageType messageType, String format) {
    gnsdk_javaJNI.GnLog_write(line, fileName, customPackageId, messageType.swigValue(), format);
  }

  public final static int kMinimumCustomPackageIdValue = (((0x80) +0x5f) +0x01);
  public final static int kMaximumCustomPackageIdValue = (((0x80) +0x7D));
}

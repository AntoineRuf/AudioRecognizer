/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.gracenote.gnsdk;

public class GnMusicIdFileOptions {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected GnMusicIdFileOptions(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GnMusicIdFileOptions obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gnsdk_javaJNI.delete_GnMusicIdFileOptions(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void lookupMode(GnLookupMode lookupMode) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnMusicIdFileOptions_lookupMode(swigCPtr, this, lookupMode.swigValue());
  }

  public void lookupData(GnLookupData val, boolean enable) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnMusicIdFileOptions_lookupData(swigCPtr, this, val.swigValue(), enable);
  }

  public void batchSize(long size) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnMusicIdFileOptions_batchSize(swigCPtr, this, size);
  }

  public void onlineProcessing(boolean enable) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnMusicIdFileOptions_onlineProcessing(swigCPtr, this, enable);
  }

  public void preferResultLanguage(GnLanguage preferredLangauge) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnMusicIdFileOptions_preferResultLanguage(swigCPtr, this, preferredLangauge.swigValue());
  }

  public void preferResultExternalId(String preferredExternalId) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnMusicIdFileOptions_preferResultExternalId(swigCPtr, this, preferredExternalId);
  }

  public void threadPriority(GnThreadPriority threadPriority) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnMusicIdFileOptions_threadPriority(swigCPtr, this, threadPriority.swigValue());
  }

  public void networkInterface(String ipAddress) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnMusicIdFileOptions_networkInterface(swigCPtr, this, ipAddress);
  }

  public void custom(String optionKey, boolean enable) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnMusicIdFileOptions_custom__SWIG_0(swigCPtr, this, optionKey, enable);
  }

  public void custom(String option, String value) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnMusicIdFileOptions_custom__SWIG_1(swigCPtr, this, option, value);
  }

}

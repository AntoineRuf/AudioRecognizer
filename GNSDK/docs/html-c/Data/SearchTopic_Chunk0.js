define({"0":{i:0.00540674440312433,u:"../Content/shared-topics/front_back_matter/C-HelpSystemTitlePageOnline.html",a:"GNSDK Help System C API (Gracenote Developer Portal Edition) Release 3.07.7.3701 Published: 7/14/2015 12:47 PM  Start here: Documentation Roadmap   Gracenote, Inc. 2000 Powell Street, Suite 1500 Emeryville, California 94608-1804 www.gracenote.com ",t:"GNSDK Documentation"},"1":{i:0.010002539789924,u:"../Content/c-topics/c_doc_roadmaps/C-DocRoadmapOnline.html",a:"GNSDK for Desktop provides a broad range of documentation and sample code to help you develop GNSDK applications. The documentation is in two formats: HTML5 Help PDF In general, each of these contain the same content. The main difference is that the PDF documentation does not contain API Reference ...",t:"Start Here - Documentation Roadmap"},"2":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/About Gracenote.html",a:"A pioneer in the digital media industry, Gracenote combines information, technology, services, and applications to create ingenious entertainment solutions for the global market. From media management, enrichment, and discovery products to content identification technologies, Gracenote allows ...",t:"About Gracenote"},"3":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/What is Gracenote SDK.html",a:"What is Gracenote SDK? Gracenote SDK (GNSDK) is a platform that delivers Gracenote technologies to devices, desktop applications, web sites, and backend servers. GNSDK enables easy integration of Gracenote technologies into customer applications and infrastructure—helping developers add critical ...",t:"What is Gracenote SDK"},"4":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Modules Overview.html",a:"GNSDK for Desktop consists of several modules that support specific Gracenote products. The principal module required for all applications is the GNSDK Manager. Others are optional, depending on the functionality of the applications you develop and the products you license from Gracenote. General ...",t:"Modules Overview"},"5":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Gracenote Media Elements.html",a:"Gracenote Media Elements are the software representations of real-world things like CDs, Albums, Tracks, Contributors, and so on. The following is a partial list of the higher-level media elements represented in GNSDK for Desktop : Music Music CD Album Track Artist Contributor Video Video Product ...",t:"Gracenote Media Elements"},"6":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Music Terminology.html",a:"The following terms are used throughout the music documentation. For a detailed list of GNSDK terms and definitions, see the Glossary . Album - A collection of audio recordings, typically of songs or instrumentals. Audio Work - A collection of classical music recordings. Track - A song or ...",t:"Music Terminology"},"7":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Video Terminology.html",a:"The following terms are used throughout the video documentation. For a detailed list of GNSDK terms and definitions, see the Glossary . Video Work - A Work refers to the artistic creation and production of a Film, TV Series, or other form of video content. The same Work can be released on multiple ...",t:"Video Terminology"},"8":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Genre and Other List-Dependent Values.html",a:"GNSDK for Desktop uses list structures to store strings and other information that do not directly appear in results returned from Gracenote Service. Lists generally contain information such as localized strings and region-specific information. Each list is contained in a corresponding List Type. ...",t:"Genre and Other List-Dependent Values"},"9":{i:0.0100178640960828,u:"../Content/shared-topics/concepts/Core and Enriched Metadata.html",a:"All Gracenote customers can access core metadata from Gracenote for the products they license. Optionally, customers can retrieve additional metadata, known as enriched metadata , by purchasing additional metadata entitlements. The following diagram shows the core and enriched metadata available for ...",t:"Core and Enriched Metadata"},"10":{i:0.00770464209652417,u:"../Content/shared-topics/concepts/Mood and Tempo Sonic Attributes.html",a:"Mood and Tempo (Sonic Attributes) Gracenote provides two metadata fields that describe the sonic attributes of an audio track. These fields, mood and tempo, are track-level descriptors that capture the unique characteristics of a specific recording. Mood is a perceptual descriptor of a piece of ...",t:"Mood and Tempo Sonic Attributes"},"11":{i:0.00770464209652417,u:"../Content/shared-topics/concepts/Classical Music Metadata.html",a:"This topic discusses Gracenote classical music support, Three-Line-Solution (TLS), and GNSDK for Desktop \u0027s support for accessing classical music metadata from Gracenote Service. Gracenote TLS provides the four basic classical music metadata components—composer, album name, artist name, and track ...",t:"Classical Music Metadata"},"12":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Third-Party Identifiers and Preferred Partners.html",a:"Link can match identified media with third-party identifiers. This allows applications to match media to IDs in stores and other online services—facilitating transactions by helping connect queries directly to commerce. Gracenote has preferred partnerships with several partners and matches preferred ...",t:"Third-Party Identifiers and Preferred Partners"},"13":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Clean-up and Collaborative Artists.html",a:"Gracenote powers an easier navigation experience by utilizing Gracenote’s clean metadata. Slight misspellings and nicknames can be cleaned-up into a single name for quicker, more accurate navigation. For example, tracks by “CCR”, “C.C.R” and “Creedence Clearwater Revival” can all be cleaned up into ...",t:"Clean-up and Collaborative Artists"},"14":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Music Module Overview.html",a:"Music Module Overview The following diagram summarizes the kinds of identification queries each Music module supports.  ",t:"Music Module Overview"},"15":{i:0.00693867619872423,u:"../Content/shared-topics/concepts/MusicID Overview.html",a:"MusicID allows application developers to deliver a compelling digital entertainment experience by giving users tools to manage and enjoy music collections on media devices, including desktop and mobile devices. MusicID is the most comprehensive identification solution in the industry with the ...",t:"MusicID Overview"},"16":{i:0.010002539789924,u:"../Content/shared-topics/concepts/CD TOC Recognition.html",a:"MusicID-CD is the component of GNSDK for Desktop that handles recognition of audio CDs and delivery of information including artist, title, and track names. The application provides GNSDK for Desktop with the TOC from an audio CD and MusicID-CD will identify the CD and provide album and track ...",t:"CD TOC Recognition"},"17":{i:0.00781400333861914,u:"../Content/shared-topics/concepts/Text-Based Recognition.html",a:"You can identify music by using a lookup based on text strings. The text strings can be extracted from an audio track’s file path name and from text data embedded within the file, such as mp3 tags. You can provide the following types of input strings: Album title Track title Album artist Track ...",t:"Text-Based Recognition"},"18":{i:0.010002539789924,u:"../Content/shared-topics/concepts/Fingerprint-Based Recognition.html",a:"You can use MusicID or MusicID-File to identify music using an audio fingerprint. An Audio fingerprint is data that uniquely identifies an audio track based on the audio waveform.  The online Gracenote Media Service uses audio fingerprints to match the audio from a client application to the ...",t:"Fingerprint-Based Recognition"},"19":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/MusicID-File Overview.html",a:"MusicID-File provides advanced file-based identification features not included in the MusicID module. MusicID-File can perform recognition using individual files or leverage collections of files to provide advanced recognition. When an application provides decoded audio and text data for each file ...",t:"MusicID-File Overview"},"20":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/MusicID vs. MusicID-File.html",a:"Deciding whether to use the MusicID or MusicID-File SDK depends upon whether you are doing a \"straightforward lookup\" or \"media recognition.\" Use the MusicID SDK to perform a straightforward lookup.\nA lookup is considered straightforward if the application has a single type of data and would like to ...",t:"MusicID vs. MusicID-File"},"21":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/MusicID-Stream.html",a:"You can use MusicID-Stream to recognize music delivered as a continuous stream.\nSpecifically, MusicID-Stream performs these functions: Recognizing streaming music in real time and on-demand . Automatically manages buffering of streaming audio. Continuously identifies the audio stream when initiated ...",t:"MusicID-Stream"},"22":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Radio Overview.html",a:"Gracenote Radio allows you monitor audio streams, providing recognition and metadata retrieval for terrestrial, Internet, and satellite radio stations. Gracenote Radio is a subset of MusicID-Stream, and is intended for use without any end-user interaction. Radio: Recognizes streaming audio from ...",t:"Radio Overview"},"23":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Video Module Overview.html",a:"GNSDK provides two modules for implementing video features: VideoID and VideoExplore: VideoID supports recognizing DVDs and Blu-ray discs, and enables access to related metadata such as title, genre, rating, synopsis, cast and crew. Video Explore enables access to additional video elements and their ...",t:"Video Module Overview"},"24":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/VideoID Overview.html",a:"VideoID can recognize Products (DVDs/Blu-Ray discs) using any of the following as input: TOC (table of contents) Text (a Product title) External ID, such as UPC, EAN, and Hinban codes GDO Gracenote Data Object: Containers most-commonly used to store information returned by a query. GDOs can contain ...",t:"VideoID Overview"},"25":{i:0.00770464209652417,u:"../Content/shared-topics/concepts/VideoExplore Overview.html",a:"Using VideoExplore, an application can perform advanced video recognition and exploration using any of the following as input: Text, such as Product and AV Work titles, and names of Series and Contributors. External ID, such as UPC, EAN, and Hinban codes GDO Gracenote Data Object: Containers ...",t:"VideoExplore Overview"},"26":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Playlists Overview.html",a:"Playlist provides advanced playlist generation enabling a variety of intuitive music navigation methods. Using Playlist, applications can create sets of related media from larger collections—enabling valuable features such as More Like This™ and custom playlists—that help users easily find the music ...",t:"Playlists Overview"},"27":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Playlist Requirements.html",a:".Playlist Requirements and Recommendations This topic discusses requirements and recommendations for your Playlist implementation. Simplified Playlist Implementation Gracenote recommends streamlining your implementation by using the provided More Like This function, ...",t:"Playlist Requirements and Recommendations"},"28":{i:0.00770464209652417,u:"../Content/shared-topics/concepts/Key Playlist Components.html",a:"Playlist operates on several key components. The GNSDK for Desktop Playlist module provides functions to implement and manage the following key components within your application. Media metadata: Metadata of the media items (or files) The media may be on MP3s on a device, or a virtual collection ...",t:"Key Playlist Components"},"29":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/MoodGrid Overview.html",a:"The MoodGrid library allows applications to generate playlists and user interfaces based on Gracenote Mood descriptors. MoodGrid provides Mood descriptors to the application in a two-dimensional grid that represents varying degrees of moods across each axis. One axis represents energy (calm to ...",t:"MoodGrid Overview"},"30":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Rhythm Overview.html",a:"Rhythm enables seamless integration of any audio source with online music services within a single application. Depending on the supported features of each online music service, an identified track can be used to link to a service to: Play that song Play more songs from that artist/album or Create ...",t:"Rhythm Overview"},"31":{i:0.00647163161607861,u:"../Content/shared-topics/concepts/Link Module Overview.html",a:"The Link module allows applications to access enriched content beyond standard core metadata. The diagram below show the difference between core metadata and enriched content for music. Link allows applications to access and present enriched content related to media that has been identified using ...",t:"Link Module Overview"},"32":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Music Enrichment.html",a:"Link provides access to Gracenote Music Enrichment—a single-source solution for enriched content including cover art, artist images, biographies, and reviews. Link and Music Enrichment allow applications to offer enriched user experiences by providing high quality images and information to ...",t:"Music Enrichment"},"33":{i:0.00647163161607861,u:"../Content/shared-topics/concepts/Image Formats and Dimensions.html",a:"Gracenote provides images in several dimensions to support a variety of applications. Applications or devices must specify image size when requesting an image from Gracenote. All Gracenote images are provided in the JPEG (.jpg) image format. Available Image Dimensions Gracenote provides images to ...",t:"Image Formats and Dimensions"},"34":{i:0.00540674440312433,u:"../Content/shared-topics/concepts/Video Enrichment Overview.html",a:"All Gracenote customers can access core metadata products they license. Optionally, customers can access additional metadata, known as enriched metadata by purchasing additional metadata entitlements. Applications generally access enriched metadata using the Link module APIs. Enriched metadata ...",t:"Video Enrichment Overview"},"35":{i:0.0128001496295434,u:"../Content/shared-topics/platform-topics/System Requirements.html",a:"Supported Platforms and System Requirements GNSDK for Desktop provides multi-threaded, thread-safe technology for the following common platforms. Gracenote Developer Portal System Requirements Platform Architecture Bit S/S OS Compiler/Note Android armeabi-v7a 32-bit shared  gcc 4.6 iOS armv7 32-bit ...",t:"System Requirements"},"36":{i:0.00540674440312433,u:"../Content/shared-topics/platform-topics/Memory Usage.html",a:"The memory usage of GNSDK for Desktop depends on a number of different factors, including the use of multiple threads, type of recognition, size of a user\u0027s collection, number of simultaneous devices connected, metadata requested, etc. Typical integrations can use anywhere from 5 MB to 30 MB ...",t:"Memory Usage"},"37":{i:0.00540674440312433,u:"../Content/shared-topics/platform-topics/LibrarySizesDesktop.html",a:"The following table lists the library sizes for GNSDK . Desktop 3.x Platform Architecture Type Size Notes Android armeabi Dynamic 1 M Utilities armeabi Dynamic 11 M  armeabi-v7a Dynamic 1 M Utilities armeabi-v7a Dynamic 11 M  x86 Dynamic 1 M Utilities x86 Dynamic 11 M  iOS armv7-32 Static 8 M  ...",t:"Development Library Sizes"},"38":{i:0.00540674440312433,u:"../Content/c-topics/using_sample_apps/GNSDK C QuickStart.html",a:"Introduction This tutorial shows you how to build a simple GNSDK C application from scratch. The application does a track title text search to identify an album in the Gracenote database. The Gracenote SDK provides several methods to access Gracenote metadata from a C application, most of which are ...",t:"GNSDK C Quick Start Tutorial"},"39":{i:0.00540674440312433,u:"../Content/c-topics/using_sample_apps/Sample Applications Overview.html",a:"Using the Sample Applications GNSDK for Desktop provides working command-line  sample applications that demonstrate common queries and application scenarios. The package also provides sample databases you can use when developing your applications. Gracenote recommends stepping through the sample ...",t:"Sample Applications Overview"},"40":{i:0.017395945016343,u:"../Content/c-topics/using_sample_apps/Building a Sample Application.html",a:"GNSDK for Desktop provides sample applications for many common use cases. You can find the sample applications  in the samples/\u003cmodule\u003e folders of your GNSDK for Desktop package, where \u003cmodule\u003e corresponds to GNSDK for Desktop modules and features, like musicid_lookup_album_toc, ...",t:"Building a Sample Application"},"41":{i:0.00540674440312433,u:"../Content/c-topics/using_sample_apps/MusicID Sample Application Walkthrough/GNSDK MusicID Sample Application.html",a:"This topic steps through the GNSDK for Desktop sample application called musicid_gdo_navigation. Sample Application: musicid_gdo_navigation/main.c This application uses MusicID to look up Album content, navigate the hierarchy of data returned, and extract and display metadata results. As shown in ...",t:"GNSDK MusicID Sample Application"},"42":{i:0.00540674440312433,u:"../Content/c-topics/using_sample_apps/MusicID Sample Application Walkthrough/Prerequisites.html",a:"To build and run any of the sample applications, see Building a Sample Application . In general, you need three things from Gracenote: License File—Details your permissions and access to GNSDK for Desktop libraries. Client ID—Your specific GNSDK for Desktop access identifier. Client Tag—A hashed ...",t:"Prerequisites"},"43":{i:0.00540674440312433,u:"../Content/c-topics/using_sample_apps/MusicID Sample Application Walkthrough/Initialization.html",a:"After main() does some initial error checking on the Client ID, Client Tag and License File parameters, it calls _init_gnsdk() which makes a number of initialization calls. Initialize the GNSDK Manager Your application must initialize the GNSDK Manager prior to calling any other GNSDK for Desktop ...",t:"Initialization"},"44":{i:0.00540674440312433,u:"../Content/c-topics/using_sample_apps/MusicID Sample Application Walkthrough/MusicID Queries.html",a:"An application can make a MusicID identification query in several ways, including text lookups, TOC lookups, fingerprint lookups, and so on. For a complete list of these options and examples, see MusicID Overview . After identifying an element, Gracenote recommends using GDOs (Gracenote Data ...",t:"MusicID Queries"},"45":{i:0.00540674440312433,u:"../Content/c-topics/using_sample_apps/MusicID Sample Application Walkthrough/Releasing Resources and Shutting.html",a:"Before the program exits, it calls _shutdown_gnsdk(), which releases the user handle and shuts down the MusicID library, local storage and the GNSDK for Desktop : gnsdk_manager_user_release(user_handle);\n\n/*\n * The sample app code (not shown) saves the serialized user handle for later use during ...",t:"Releasing Resources and Shutting Down"},"46":{i:0.00540674440312433,u:"../Content/c-topics/basic_app_design/Application Flow.html",a:"This topic describes how to get started with GNSDK for Desktop development. Every GNSDK for Desktop application follows this general design and application flow: Include the GNSDK for Desktop header files for the modules your application requires. These should be based on the Gracenote products you ...",t:"Application Flow"},"47":{i:0.00540674440312433,u:"../Content/c-topics/basic_app_design/Working with Header Files and Libraries.html",a:"GNSDK for Desktop consists of a set of shared modules. The GNSDK Manager module is required for all applications. All other modules are optional. Your application\u0027s feature requirements determine which of the optional modules should be used. Each GNSDK for Desktop module has one or more ...",t:"Working with Header Files and Libraries"},"48":{i:0.00540674440312433,u:"../Content/c-topics/basic_app_design/Getting Manifest Information about Local Databases.html",a:"GNSDK for Desktop provides local databases, which differ based on region, configuration, and other factors. You can retrieve manifest information about your local databases, including database versions, available image sizes, and available locale configurations. Your application can use this ...",t:"Getting Manifest Information about Local Databases"},"49":{i:0.0360208059859247,u:"../Content/c-topics/basic_app_design/Authorizing a GNSDK Application.html",a:"Gracenote manages access to metadata using a combination of product licensing and server-side metadata entitlements. As a Gracenote customer, Gracenote Global Services \u0026 Support works with you to determine the kind of products you need (such as MusicID, Playlist, and so on). Gracenote also ...",t:"Authorizing a GNSDK for Desktop Application"},"50":{i:0.00540674440312433,u:"../Content/c-topics/basic_app_design/Initializing and Shutting Down GNSDK.html",a:"Initializing an Application Your application needs to initialize a module before using it. It needs to first call gnsdk_manager_initialize() to use the GNSDK Manager module. This call requires a client ID and a Gracenote license file and returns a handle necessary to initialize other modules. ...",t:"Initializing and Shutting Down GNSDK"},"51":{i:0.00540674440312433,u:"../Content/c-topics/basic_app_design/Setting Network and Proxy Values.html",a:"An application can set options to aid in working with networks and proxy servers. Depending on the topology of your network, you can alter certain values using gnsdk_manager_user_option_set() so your Gracenote application can effectively work within your system.  Proxy Server Options GNSDK for ...",t:"Setting Network and Proxy Options"},"52":{i:0.00540674440312433,u:"../Content/c-topics/basic_app_design/Configuring Logging.html",a:"There are 3 approaches you can take to implementing logging using the GNSDK: Enable GNSDK logging - This creates log file(s) that you and Gracenote Global Services \u0026 Support can use to evaluate and debug any problems your application might encounter when using the SDK. Enable GNSDK logging and add ...",t:"Configuring Logging"},"53":{i:0.00540674440312433,u:"../Content/c-topics/basic_app_design/Working with Local Databases.html",a:"Working with local databases is very similar to working with online Gracenote services. In both cases, queries can be set up in the same way, and results can be processed in the same way. To use a local database, you must initialize the local database and you must set the user lookup option to ...",t:"Working with Local Databases"},"54":{i:0.0165101952910637,u:"../Content/c-topics/basic_app_design/Setting Local and Online Lookup Modes.html",a:"An application can perform local or online lookups as shown in the following diagram. Lookup Providers A lookup provider is a module that implements the ability to query data for matches. GNSDK for Desktop allows both local and online lookup providers to be enabled at run-time, and you can use ...",t:"Setting Local and Online Lookup Modes"},"55":{i:0.0208354236012182,u:"../Content/shared-topics/concepts/Gracenote Data Objects GDOs.html",a:"About Gracenote Data Objects (GDOs) The primary goal of any GNSDK for Desktop application is to recognize media elements and access their metadata. When an application performs a query, Gracenote returns metadata about the target query element, such as the title and genre of an album element. In ...",t:"Gracenote Data Objects GDOs"},"56":{i:0.0666348675687251,u:"../Content/c-topics/basic_app_design/GDO Workflows.html",a:"A Gracenote identification query can return no matches, a single match, or multiple matches. The workflow for managing single and multiple GDO Gracenote Data Object: Containers most-commonly used to store information returned by a query. GDOs can contain metadata values (names, titles, external IDs, ...",t:"GDO Workflows"},"57":{i:0.00540674440312433,u:"../Content/c-topics/basic_app_design/Common GDO Tasks.html",a:"Retrieving a Track GDO from an Album GDO To retrieve a Track GDO Gracenote Data Object: Containers most-commonly used to store information returned by a query. GDOs can contain metadata values (names, titles, external IDs, and so on) that can be accessed by an application using Value keys.  GDOs can ...",t:"Common GDO Tasks"},"58":{i:0.00540674440312433,u:"../Content/c-topics/basic_app_design/GDO Navigation Examples.html",a:"Gracenote Data Objects (GDOs) are the primary identifiers used to access Gracenote metadata. Example: Looking Up an Album by a TOC Sample Application: musicid_lookup_album_toc/main.c Application steps: Authenticate caller, initialize GNSDK and MusicID module, and initialize SQLite and local lookup ...",t:"GDO Navigation Examples"},"59":{i:0.011914399904264,u:"../Content/c-topics/basic_app_design/Using SQLite for Storage and Caching.html",a:"The GNSDK for Desktop SQLite module provides a local storage solution using the SQLite database engine. This module is used to manage a local cache of content and Gracenote Service queries. This is for GNSDK use only - your application cannot use this database for its own storage. For information on ...",t:"Using  SQLite for Storage and Caching"},"60":{i:0.00540674440312433,u:"../Content/c-topics/basic_app_design/Implementing Status Callbacks.html",a:"GNSDK for Desktop allows you to implement status callback functions that are called at certain points during ongoing operations. Implementing a callback function allows you to monitor an operation\u0027s status, and cancel it if necessary. You can set a callback for any of the following operations: ...",t:"Implementing Status Callbacks"},"61":{i:0.0192094548696821,u:"../Content/c-topics/basic_app_design/Using Locales.html",a:"GNSDK for Desktop provides locales as a convenient way to group locale-dependent metadata specific to a region (such as  Europe) and language that should be returned from the Gracenote service. A locale is defined by a group (such as  Music), a language, a region and a  descriptor (indicating level ...",t:"Using Locales"},"62":{i:0.00540674440312433,u:"../Content/c-topics/basic_app_design/Testing an Application.html",a:"Gracenote helps you validate and ship your Gracenote-enabled application. Read the following sections carefully to learn the procedures you must follow to release your application. Enabling Test Mode When you are ready to begin testing your Gracenote-enabled application, send an email to ...",t:"Testing an Application"},"63":{i:0.0104680318204848,u:"../Content/c-topics/recognition/music/Music Recognition Overview.html",a:"GNSDK for Desktop supports identification of both non-streaming and streaming music. Non-streaming music generally refers to music stored as a file or on a CD. You can identify non-streaming music using a CD TOC, a Gracenote identifier, or other information extracted from an audio file. Streaming ...",t:"Music Recognition Overview"},"64":{i:0.00540674440312433,u:"../Content/c-topics/recognition/music/Identifying Music Using a CD TOC.html",a:"You can use MusicID-CD to identify an audio CD TOC. For more information, see CD TOC Recognition . Example: Identifying an Album Using a CD TOC The example below illustrates a simple TOC lookup for local and online systems. The code for the local and online lookups is the same, except for two areas. ...",t:"Identifying Music Using a CD TOC"},"65":{i:0.00849607300745179,u:"../Content/c-topics/recognition/music/Identifying Music Using Text.html",a:"You can identify music using a text string lookup. For more information, see Text-Based Recognition . Creating and Executing a Query for a Text-based Lookup The first step in performing a text-based lookup is to create a music query, which returns a query handle that you will use in subsequent ...",t:"Identifying Music Using Text"},"66":{i:0.00540674440312433,u:"../Content/c-topics/recognition/music/Identifying Music Using Fingerprints.html",a:"You can identify music using an audio fingerprint. For more information, see Fingerprint-Based Recognition . PCM Audio Format Recommendations GNSDK for Desktop fingerprinting supports the following PCM Audio Formats: Sample Sizes: 16-bit Channels: 2 or 1 (stereo or mono) Sample Rates: 48000 Hz 44100 ...",t:"Identifying Music Using Fingerprints"},"67":{i:0.00540674440312433,u:"../Content/c-topics/discovery/Implementing Radio.html",a:"Radio: Is a subset of MusicID-Stream. Recognizes streaming audio from traditional radio sources, including AM/FM, HD, DAB, and others. Recognizes music automatically without the need to start or stop recognition. Supports broadcast metadata such as title, artist, or station. Implementing Radio in an ...",t:"Implementing Radio"},"68":{i:0.00540674440312433,u:"../Content/c-topics/recognition/video/Using VideoID.html",a:"Besides acquiring the necessary licensing, including VideoID requires the following define: #define GNSDK_VIDEO 1 And making the following initializing API call with your SDK Manager handle: gnsdk_video_initialize(sdkmgr_handle); Before your program exits, it needs to make the following API to ...",t:"Using VideoID"},});